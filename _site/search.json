[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624",
    "section": "",
    "text": "Welcome to ISSS624 Geospatial Analytics Applications!\nIn this webpage, I am going to share with you my learning journey of geospatial analytics."
  },
  {
    "objectID": "Take-home-Ex2.html",
    "href": "Take-home-Ex2.html",
    "title": "Take home Ex2",
    "section": "",
    "text": "The scenario highlights the challenges in urban mobility, specifically understanding commuting patterns and the impact of public transportation changes. Traditional methods like commuter surveys are outdated and inefficient. The focus shifts to leveraging digital infrastructure data, such as GPS and SMART card usage, for more dynamic and insightful analysis.The exercise is motivated by two factors: the underutilization of available open data for policy making and the need for practical research in geospatial data science and analysis (GDSA). The task involves using GDSA to integrate diverse data sources, building spatial interaction models to understand public bus transit patterns. This approach aims to provide more effective tools for urban planning and decision-making.\n\n\n\n\n\nFor the purpose of this assignment, data from several open government sources will be used:\n\nPassenger Volume by Origin Destination Bus Stops, Bus Stop Location, Train Station and Train Station Exit Point, just to name a few of them, from LTA DataMall.\nMaster Plan 2019 Subzone Boundary, HDB Property Information, School Directory and Information and other relevant data from Data.gov.sg.\nhexagon, a hexagon layer of 250m (this distance is the perpendicular distance between the centre of the hexagon and its edges.) should be used to replace the relative coarse and irregular Master Plan 2019 Planning Sub-zone GIS data set of URA.\n\n\n\n\n\n\npacman::p_load(sf, sp, tmap, tidyverse, knitr, stplanr, reshape2, performance)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_style(\"natural\")\n\ntmap style set to \"natural\"\n\n\nother available styles are: \"white\", \"gray\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\nset.seed(1234)\n\n\n\n\n\n\nFirstly, we will import the Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall by using read_csv() of readr package.\n\nodbus &lt;- read_csv(\"Take-home Exercise 2/data/aspatial/origin_destination_bus_202310.csv\")\n\nRows: 5694297 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): YEAR_MONTH, DAY_TYPE, PT_TYPE, ORIGIN_PT_CODE, DESTINATION_PT_CODE\ndbl (2): TIME_PER_HOUR, TOTAL_TRIPS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nkable(head(odbus))\n\n\n\n\n\n\n\n\n\n\n\n\n\nYEAR_MONTH\nDAY_TYPE\nTIME_PER_HOUR\nPT_TYPE\nORIGIN_PT_CODE\nDESTINATION_PT_CODE\nTOTAL_TRIPS\n\n\n\n\n2023-10\nWEEKENDS/HOLIDAY\n16\nBUS\n04168\n10051\n3\n\n\n2023-10\nWEEKDAY\n16\nBUS\n04168\n10051\n5\n\n\n2023-10\nWEEKENDS/HOLIDAY\n14\nBUS\n80119\n90079\n3\n\n\n2023-10\nWEEKDAY\n14\nBUS\n80119\n90079\n5\n\n\n2023-10\nWEEKDAY\n17\nBUS\n44069\n17229\n4\n\n\n2023-10\nWEEKENDS/HOLIDAY\n17\nBUS\n20281\n20141\n1\n\n\n\n\n\n\n\n\nFor the purpose of this exercise, three geospatial data will be used first. They are:\n\nBusStop: This data provides the location of bus stop as at last quarter of 2023.\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.\nHexagon: analytical hexagon data of 375m (this distance is the perpendicular distance between the centre of the hexagon and its edges) to represent the traffic analysis zone (TAZ).\n\n\nmpsz &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\",\n                layer = \"MPSZ-2019\") %&gt;%\n  select(SUBZONE_N)\n\nReading layer `MPSZ-2019' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nbusstops &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\",\n                    layer = \"BusStop\")\n\nReading layer `BusStop' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nwrite_rds(mpsz, \"Take-home Exercise 2/data/rds/mpsz.rds\")\nwrite_rds(busstops, \"Take-home Exercise 2/data/rds/busstops.rds\")\n\n\n\n\n\nhoneycomb &lt;- busstops %&gt;% st_make_grid(cellsize = 750,\n                                       what=\"polygons\",\n                                       square = FALSE) %&gt;%\n  st_sf() %&gt;%\n  filter(lengths(st_intersects(geometry, busstops)) &gt; 0)\n\nNow that we have hexagons properly generated, we will assign id for each hexagon to be used as a unique identifier. We will store this id under the HEX_ID column, and can be used in joining data frames.\n\nhoneycomb$HEX_ID &lt;- sprintf(\"H%04d\", seq_len(nrow(honeycomb))) %&gt;% as.factor()\nkable(head(honeycomb))\n\n\n\n\ngeometry\nHEX_ID\n\n\n\n\nPOLYGON ((3970.122 27348.13…\nH0001\n\n\nPOLYGON ((4345.122 27997.65…\nH0002\n\n\nPOLYGON ((4345.122 30595.72…\nH0003\n\n\nPOLYGON ((4720.122 28647.16…\nH0004\n\n\nPOLYGON ((4720.122 29946.2,…\nH0005\n\n\nPOLYGON ((4720.122 31245.24…\nH0006\n\n\n\n\n\n\nwrite_rds(honeycomb, \"Take-home Exercise 2/data/rds/honeycomb.rds\")\n\n\n\n\n\n\n\n\n\nWe only need the data for the weekend morning peak period, which is from 11 AM - 2 PM on weekends and holidays. As such, we will filter the data for the relevant hours.\n\nod_trips &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %&gt;%\n  filter( TIME_PER_HOUR &gt;= 11 &\n            TIME_PER_HOUR &lt; 14\n          ) %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n  rename(\n    ORIG_BUS_STOP_N = ORIGIN_PT_CODE,\n    DEST_BUS_STOP_N = DESTINATION_PT_CODE\n  )\n\n`summarise()` has grouped output by 'ORIGIN_PT_CODE'. You can override using\nthe `.groups` argument.\n\nkable(head(od_trips))\n\n\n\n\nORIG_BUS_STOP_N\nDEST_BUS_STOP_N\nTRIPS\n\n\n\n\n01012\n01112\n204\n\n\n01012\n01113\n129\n\n\n01012\n01121\n95\n\n\n01012\n01211\n91\n\n\n01012\n01311\n152\n\n\n01012\n01559\n5\n\n\n\n\n\n\nrm(odbus)\n\nTo connect the trip data to the their corresponding hexagon, we need to create a lookup table. This will serve as a glue in associating the aspatial od_trips data frame to the honeycomb data frame.\nThis can be done via st_intersection().\n\nbs_hex &lt;- st_intersection(busstops, honeycomb) %&gt;%\n  st_drop_geometry() %&gt;%\n  select(c(BUS_STOP_N, HEX_ID))\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\nkable(head(bs_hex))\n\n\n\n\n\nBUS_STOP_N\nHEX_ID\n\n\n\n\n3269\n25059\nH0001\n\n\n2570\n25751\nH0002\n\n\n254\n26379\nH0003\n\n\n2403\n26369\nH0003\n\n\n2829\n25741\nH0004\n\n\n1715\n26399\nH0005\n\n\n\n\n\n\n\n\nNext, we need to associate each origin bus stop and destination bus stop to their corresponding hexagons.\nWe can use that by doing inner_join() twice, once for the origin and another for the destination.\n\nod_trips_w_hex &lt;- od_trips %&gt;%\n  inner_join(bs_hex,\n             by = c(\"ORIG_BUS_STOP_N\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIG_HEX_ID = HEX_ID) %&gt;%\n  inner_join(bs_hex,\n             by = c(\"DEST_BUS_STOP_N\" = \"BUS_STOP_N\")) %&gt;%\n  rename(DEST_HEX_ID = HEX_ID)\n\nWarning in inner_join(., bs_hex, by = c(ORIG_BUS_STOP_N = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 25339 of `x` matches multiple rows in `y`.\nℹ Row 3057 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nWarning in inner_join(., bs_hex, by = c(DEST_BUS_STOP_N = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 186 of `x` matches multiple rows in `y`.\nℹ Row 3146 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nkable(head(od_trips_w_hex))\n\n\n\n\nORIG_BUS_STOP_N\nDEST_BUS_STOP_N\nTRIPS\nORIG_HEX_ID\nDEST_HEX_ID\n\n\n\n\n01012\n01112\n204\nH0518\nH0530\n\n\n01012\n01113\n129\nH0518\nH0530\n\n\n01012\n01121\n95\nH0518\nH0553\n\n\n01012\n01211\n91\nH0518\nH0553\n\n\n01012\n01311\n152\nH0518\nH0564\n\n\n01012\n01559\n5\nH0518\nH0553\n\n\n\n\n\n\n\n\nNext, we will perform aggregations by ORIG_HEX_ID and DEST_HEX_ID to have an aggregated sum of trips by hexagon instead of bus stops.\n\nod_hex &lt;- od_trips_w_hex %&gt;%\n  group_by(ORIG_HEX_ID, DEST_HEX_ID) %&gt;%\n  summarise(TRIPS = sum(TRIPS))\n\n`summarise()` has grouped output by 'ORIG_HEX_ID'. You can override using the\n`.groups` argument.\n\nkable(head(od_hex))\n\n\n\n\nORIG_HEX_ID\nDEST_HEX_ID\nTRIPS\n\n\n\n\nH0002\nH0016\n1\n\n\nH0002\nH0017\n2\n\n\nH0002\nH0032\n16\n\n\nH0003\nH0005\n1\n\n\nH0003\nH0022\n56\n\n\nH0003\nH0028\n10\n\n\n\n\n\nSave point:\n\nwrite_rds(bs_hex, \"Take-home Exercise 2/data/rds/bs_hex.rds\")\nwrite_rds(od_hex, \"Take-home Exercise 2/data/rds/od_hex202310.rds\")\nwrite_rds(od_trips, \"Take-home Exercise 2/data/rds/od_trips202310.rds\")\n\n\nrm(od_trips_w_hex)\n\n\n\n\n\nFirst, we will generate the flow lines using od2line(). honeycomb will be supplied as the zone as it contains the hexagons we are using as the traffic analysis zones.\n\ninvalid_geoms &lt;- which(!st_is_valid(mpsz))\n\n# If there are invalid geometries, fix them\nif(length(invalid_geoms) &gt; 0) {\n  mpsz[invalid_geoms, ] &lt;- st_make_valid(mpsz[invalid_geoms, ])\n}\n\n\nflowlines &lt;- od_hex %&gt;% od2line(\n  honeycomb,\n  zone_code = \"HEX_ID\")\n\nCreating centroids representing desire line start and end points.\n\nwrite_rds(flowlines, \"Take-home Exercise 2/data/rds/flowlines202310.rds\")\n\n\ntm_shape(mpsz) +\n  tm_polygons(\"gray\", title = \"Singapore Boundary\", alpha = 0.5) +\n  \n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  \n  tm_shape(flowlines) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"red\",\n           scale = c(0.1, 1, 3, 5, 7),\n           title.lwd = \"# of bus trips\",\n           alpha = 0.8) +\n  \n  tm_layout(main.title = \"Bus Passenger flow for Weekends/Holidays 11 AM - 2PM (October 2023)\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_grid(alpha = 0.2)\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\nwrite_rds(flowlines, \"Take-home Exercise 2/data/rds/flowlines202310.rds\")\n\n\nrm(flowlines)\nrm(od_hex)\n\n\n\n\n\nNext, we will prepare the data needed for spatial interaction modelling. Some of these are straightforward to get, especially those of attractiveness variables. Additional steps are needed for more complex data sets, like those needed for propulsiveness variables. We will derive those in a separate section.\n\n\nWe will first initiate attractiveness from honeycomb.\n\nattractiveness &lt;- honeycomb\n\nBecause not all of the st_cos(x) == st_crs(y) are ture, it’s crucial for all datasets to be in the same CRS before performing spatial operations like intersections. The next steps will all tackle this problem.\nBUSSTOP:\n\nattractiveness$BUS_STOP_COUNT &lt;- lengths(\n  st_intersects(attractiveness, busstops))\n\nENTERTAINMENT:\n\nentertn &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\", layer = \"entertn\")\n\nReading layer `entertn' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 114 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 10809.34 ymin: 26528.63 xmax: 41600.62 ymax: 46375.77\nProjected CRS: SVY21 / Singapore TM\n\n\n\nst_crs(attractiveness)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(entertn)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nentertn &lt;- st_transform(entertn, st_crs(attractiveness))\n\n\nattractiveness &lt;- st_transform(attractiveness, st_crs(entertn))\n\n\nattractiveness$ENTERTN_COUNT &lt;- lengths(st_intersects(attractiveness, entertn))\n\n\nattractiveness$ENTERTN_COUNT &lt;- lengths(st_intersects(attractiveness, entertn))\n\nF&B:\n\nf_and_b &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\", layer = \"F&B\")\n\nReading layer `F&B' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1919 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25343.27 xmax: 45462.43 ymax: 48796.21\nProjected CRS: SVY21 / Singapore TM\n\n\n\nst_crs(attractiveness)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(f_and_b)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nf_and_b &lt;- st_transform(f_and_b, st_crs(attractiveness))\nattractiveness &lt;- st_transform(attractiveness, st_crs(f_and_b))\nattractiveness$F_AND_B_COUNT &lt;- lengths(st_intersects(attractiveness, f_and_b))\n\n\nattractiveness$F_AND_B_COUNT &lt;- lengths(st_intersects(attractiveness, f_and_b))\n\nLeisure&Recreation:\n\nleis_rec &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\", layer = \"Liesure&Recreation\")\n\nReading layer `Liesure&Recreation' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1217 features and 30 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25134.28 xmax: 48439.77 ymax: 50078.88\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntm_shape(mpsz) +\n  tm_polygons(\"green\", title = \"Singapore Boundary\", alpha = 0.5) +\n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  tm_layout(main.title = \"Map of Leisure & Recreation Spots in Singapore\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_shape(leis_rec) +\n  tm_dots(col = \"red\", size = 0.005, title = \"Leisure & Recreation Spots\") +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\nst_crs(attractiveness)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(leis_rec)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nleis_rec &lt;- st_transform(leis_rec, st_crs(attractiveness))\nattractiveness &lt;- st_transform(attractiveness, st_crs(leis_rec))\nattractiveness$LEISURE_COUNT &lt;- lengths(st_intersects(attractiveness, leis_rec))\n\n\nattractiveness$LEISURE_COUNT &lt;- lengths(st_intersects(attractiveness, leis_rec))\n\nRETAIL:\n\nretail &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\", layer = \"Retails\")\n\nReading layer `Retails' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 37635 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4737.982 ymin: 25171.88 xmax: 48265.04 ymax: 50135.28\nProjected CRS: SVY21 / Singapore TM\n\n\n\nst_crs(attractiveness)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(retail)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nretail &lt;- st_transform(retail, st_crs(attractiveness))\nattractiveness &lt;- st_transform(attractiveness, st_crs(retail))\nattractiveness$RETAIL_COUNT &lt;- lengths(st_intersects(attractiveness, retail))\n\n\nattractiveness$RETAIL_COUNT &lt;- lengths(st_intersects(attractiveness, retail))\n\nTRAIN STATION EXITS:\n\ntrain_exits &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\", layer = \"Train_Station_Exit_Layer\")\n\nReading layer `Train_Station_Exit_Layer' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 565 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6134.086 ymin: 27499.7 xmax: 45356.36 ymax: 47865.92\nProjected CRS: SVY21\n\n\n\ntm_shape(mpsz) +\n  tm_polygons(\"green\", title = \"Singapore Boundary\", alpha = 0.5) +\n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  tm_layout(main.title = \"Map of Train Station Exits in Singapore\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_shape(train_exits) +\n  tm_dots(col = \"red\", size = 0.005, title = \"Train Station Exits\") +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\nst_crs(attractiveness)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(train_exits)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\ntrain_exits &lt;- st_transform(train_exits, st_crs(attractiveness))\nattractiveness &lt;- st_transform(attractiveness, st_crs(train_exits))\nattractiveness$TRAIN_EXITS_COUNT &lt;- lengths(st_intersects(attractiveness, train_exits))\n\n\nattractiveness$TRAIN_EXITS_COUNT &lt;- lengths(st_intersects(attractiveness, train_exits))\n\nLet’s check if the attractiveness variables have been added correctly.\n\nkable(head(attractiveness))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngeometry\nHEX_ID\nBUS_STOP_COUNT\nENTERTN_COUNT\nF_AND_B_COUNT\nLEISURE_COUNT\nRETAIL_COUNT\nTRAIN_EXITS_COUNT\n\n\n\n\nPOLYGON ((3970.122 27348.13…\nH0001\n1\n0\n0\n0\n0\n0\n\n\nPOLYGON ((4345.122 27997.65…\nH0002\n1\n0\n0\n0\n0\n0\n\n\nPOLYGON ((4345.122 30595.72…\nH0003\n2\n0\n0\n0\n0\n0\n\n\nPOLYGON ((4720.122 28647.16…\nH0004\n1\n0\n0\n0\n0\n0\n\n\nPOLYGON ((4720.122 29946.2,…\nH0005\n4\n0\n0\n0\n5\n0\n\n\nPOLYGON ((4720.122 31245.24…\nH0006\n1\n0\n0\n0\n0\n0\n\n\n\n\n\n\nwrite_rds(attractiveness, \"Take-home Exercise 2/data/rds/attractiveness_no_hdb.rds\")\nwrite_rds(train_exits, \"Take-home Exercise 2/data/rds/train_exits.rds\")\n\n\nrm(busstops)\nrm(entertn)\nrm(f_and_b)\nrm(leis_rec)\nrm(retail)\n\n\n\n\nUsing the similar techniques used in Take-home Exercise 1, we will aggregate the trips using inner_join(), group_by, and summarise.\n\ndest_bus_hex &lt;- od_trips %&gt;%\n  inner_join(bs_hex,\n             by = join_by(DEST_BUS_STOP_N == BUS_STOP_N)) %&gt;%\n  group_by(HEX_ID) %&gt;%\n  summarise(TRIPS = sum(TRIPS))\n\nWarning in inner_join(., bs_hex, by = join_by(DEST_BUS_STOP_N == BUS_STOP_N)): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 186 of `x` matches multiple rows in `y`.\nℹ Row 3146 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nkable(head(dest_bus_hex))\n\n\n\n\nHEX_ID\nTRIPS\n\n\n\n\nH0002\n20\n\n\nH0003\n121\n\n\nH0004\n4\n\n\nH0005\n152\n\n\nH0006\n204\n\n\nH0007\n41\n\n\n\n\n\n\nwrite_rds(dest_bus_hex, \"Take-home Exercise 2/data/rds/dest_bus_hex202310.rds\")\n\n\nrm(bs_hex)\nrm(od_trips)\n\n\n\n\n\n\n\n\nhdb_vars &lt;- honeycomb\n\n\nhdb_csv &lt;- read_csv(\"Take-home Exercise 2/data/aspatial/hdb.csv\")\n\nNew names:\nRows: 12442 Columns: 37\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(18): blk_no, street, residential, commercial, market_hawker, miscellane... dbl\n(19): ...1, max_floor_lvl, year_completed, total_dwelling_units, 1room_s...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nkable(head(hdb_csv))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n…1\nblk_no\nstreet\nmax_floor_lvl\nyear_completed\nresidential\ncommercial\nmarket_hawker\nmiscellaneous\nmultistorey_carpark\nprecinct_pavilion\nbldg_contract_town\ntotal_dwelling_units\n1room_sold\n2room_sold\n3room_sold\n4room_sold\n5room_sold\nexec_sold\nmultigen_sold\nstudio_apartment_sold\n1room_rental\n2room_rental\n3room_rental\nother_room_rental\nlat\nlng\nbuilding\naddr\npostal\nSUBZONE_NO\nSUBZONE_N\nSUBZONE_C\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\n\n\n\n\n0\n1\nBEACH RD\n16\n1970\nY\nY\nN\nN\nN\nN\nKWN\n142\n0\n1\n138\n1\n2\n0\n0\n0\n0\n0\n0\n0\n1.295097\n103.8541\nRAFFLES HOTEL\n1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673\n189673\n2\nCITY HALL\nDTSZ02\nDOWNTOWN CORE\nDT\nCENTRAL REGION\nCR\n\n\n1\n1\nBEDOK STH AVE 1\n14\n1975\nY\nN\nN\nY\nN\nN\nBD\n206\n0\n0\n204\n0\n2\n0\n0\n0\n0\n0\n0\n0\n1.320852\n103.9337\nNIL\n1 BEDOK SOUTH AVENUE 1 SINGAPORE 460001\n460001\n6\nBEDOK SOUTH\nBDSZ06\nBEDOK\nBD\nEAST REGION\nER\n\n\n2\n1\nCANTONMENT RD\n2\n2010\nN\nY\nN\nN\nN\nN\nCT\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1.275488\n103.8414\nPINNACLE @ DUXTON\n1 CANTONMENT ROAD PINNACLE @ DUXTON SINGAPORE 080001\n080001\n3\nCHINATOWN\nOTSZ03\nOUTRAM\nOT\nCENTRAL REGION\nCR\n\n\n3\n1\nCHAI CHEE RD\n15\n1982\nY\nN\nN\nN\nN\nN\nBD\n102\n0\n0\n0\n10\n92\n0\n0\n0\n0\n0\n0\n0\n1.327969\n103.9227\nPING YI GARDENS\n1 CHAI CHEE ROAD PING YI GARDENS SINGAPORE 461001\n461001\n3\nKEMBANGAN\nBDSZ03\nBEDOK\nBD\nEAST REGION\nER\n\n\n4\n1\nCHANGI VILLAGE RD\n4\n1975\nY\nY\nN\nN\nN\nN\nPRC\n55\n0\n0\n54\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1.388610\n103.9881\nOCBC CHANGI VILLAGE ROAD - 7 ELEVEN\n1 CHANGI VILLAGE ROAD OCBC CHANGI VILLAGE ROAD - 7 ELEVEN SINGAPORE 500001\n500001\n1\nCHANGI POINT\nCHSZ01\nCHANGI\nCH\nEAST REGION\nER\n\n\n5\n1\nDELTA AVE\n25\n1982\nY\nN\nN\nN\nN\nN\nBM\n96\n0\n0\n0\n0\n96\n0\n0\n0\n0\n0\n0\n0\n1.292075\n103.8286\nNIL\n1 DELTA AVENUE SINGAPORE 160001\n160001\n9\nBUKIT HO SWEE\nBMSZ09\nBUKIT MERAH\nBM\nCENTRAL REGION\nCR\n\n\n\n\n\n\nhdb_sf &lt;- hdb_csv %&gt;% st_as_sf(coords = c(\"lng\", \"lat\"),\n                               crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\n\ntm_shape(mpsz) +\n  tm_polygons(\"green\", title = \"Singapore Boundary\", alpha = 0.5) +\n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  tm_layout(main.title = \"Map of HDB Blocks in Singapore\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_shape(hdb_sf) +\n  tm_dots(col = \"red\", size = 0.001, title = \"HDB Blocks\") +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\n\n\nThis variable will contain the number of HDB blocks in a zone. We will use the same methods to count the number locations in the zone, by using lengths() and st_intersects().\nWe will use this as attractiveness variable, and will include all HDB block types (commercial, hawker, residential) as all of them are attractive destinations for eating out, meeting family/friends, and errands.\n\nst_crs(hdb_vars)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(hdb_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nhdb_sf &lt;- st_transform(hdb_sf, st_crs(hdb_vars))\nhdb_vars &lt;- st_transform(hdb_vars, st_crs(hdb_sf))\nhdb_vars$HDB_COUNT &lt;- lengths(st_intersects(hdb_vars, hdb_sf))\n\n\nhdb_vars$HDB_COUNT &lt;- lengths(st_intersects(hdb_vars, hdb_sf))\n\n\nattractiveness &lt;- left_join(attractiveness,\n                            st_drop_geometry(hdb_vars))\n\nJoining with `by = join_by(HEX_ID)`\n\n# Using head() to limit the number of rows\nkable(head(attractiveness))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHEX_ID\nBUS_STOP_COUNT\nENTERTN_COUNT\nF_AND_B_COUNT\nLEISURE_COUNT\nRETAIL_COUNT\nTRAIN_EXITS_COUNT\nHDB_COUNT\ngeometry\n\n\n\n\nH0001\n1\n0\n0\n0\n0\n0\n0\nPOLYGON ((3970.122 27348.13…\n\n\nH0002\n1\n0\n0\n0\n0\n0\n0\nPOLYGON ((4345.122 27997.65…\n\n\nH0003\n2\n0\n0\n0\n0\n0\n0\nPOLYGON ((4345.122 30595.72…\n\n\nH0004\n1\n0\n0\n0\n0\n0\n0\nPOLYGON ((4720.122 28647.16…\n\n\nH0005\n4\n0\n0\n0\n5\n0\n0\nPOLYGON ((4720.122 29946.2,…\n\n\nH0006\n1\n0\n0\n0\n0\n0\n0\nPOLYGON ((4720.122 31245.24…\n\n\n\n\n\n\n\n\nhdb_filtered_sf &lt;- hdb_sf %&gt;%\n  filter(residential == \"Y\") %&gt;%\n  select(total_dwelling_units)\n\n\n\n\nWhile HDB_COUNT can be a population proxy, we need to consider that HDB blocks have different sizes. For example, taller and wider blocks may have more units compared to shorter blocks, and therefore higher population.\n\nhdb_vars &lt;- hdb_vars %&gt;%\n  left_join(\n    st_intersection(hdb_filtered_sf, hdb_vars) %&gt;%\n      st_drop_geometry() %&gt;%\n      group_by(HEX_ID) %&gt;%\n      summarise(HDB_RESIDENT_COUNT = sum(total_dwelling_units))\n  )\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\nJoining with `by = join_by(HEX_ID)`\n\nkable(hdb_vars[160:165,])\n\n\n\n\n\n\n\n\n\n\n\n\nHEX_ID\nHDB_COUNT\nHDB_RESIDENT_COUNT\ngeometry\n\n\n\n\n160\nH0160\n0\nNA\nPOLYGON ((17095.12 31894.76…\n\n\n161\nH0161\n12\n952\nPOLYGON ((17095.12 33193.8,…\n\n\n162\nH0162\n0\nNA\nPOLYGON ((17095.12 34492.84…\n\n\n163\nH0163\n29\n3114\nPOLYGON ((17095.12 35791.87…\n\n\n164\nH0164\n13\n1136\nPOLYGON ((17095.12 37090.91…\n\n\n165\nH0165\n44\n3652\nPOLYGON ((17095.12 39688.99…\n\n\n\n\n\n\nwrite_rds(hdb_vars, \"Take-home Exercise 2/data/rds/hdb_vars.rds\")\nwrite_rds(attractiveness, \"Take-home Exercise 2/data/rds/attractiveness.rds\")\n\n\nrm(hdb_csv)\nrm(hdb_sf)\nrm(hdb_filtered_sf)\n\n\n\n\n\n\n\nhoneycomb &lt;- read_rds(\"Take-home Exercise 2/data/rds/honeycomb.rds\")\nhdb_vars &lt;- read_rds(\"Take-home Exercise 2/data/rds/hdb_vars.rds\")\ndest_bus_hex &lt;- read_rds(\"Take-home Exercise 2/data/rds/dest_bus_hex202310.rds\")\n\n\npropulsiveness &lt;- honeycomb\n\nHDB:\n\npropulsiveness &lt;- propulsiveness %&gt;%\n  left_join(st_drop_geometry(hdb_vars)) %&gt;%\n  select(HEX_ID, HDB_RESIDENT_COUNT)\n\nJoining with `by = join_by(HEX_ID)`\n\n\nBUS:\n\npropulsiveness &lt;- propulsiveness %&gt;%\n  left_join(st_drop_geometry(dest_bus_hex)) %&gt;%\n  rename(BUS_ALIGHT_COUNT = TRIPS)\n\nJoining with `by = join_by(HEX_ID)`\n\n\n\npropulsiveness[is.na(propulsiveness)] &lt;- 0\nkable(head(propulsiveness))\n\n\n\n\n\n\n\n\n\n\nHEX_ID\nHDB_RESIDENT_COUNT\nBUS_ALIGHT_COUNT\ngeometry\n\n\n\n\nH0001\n0\n0\nPOLYGON ((3970.122 27348.13…\n\n\nH0002\n0\n20\nPOLYGON ((4345.122 27997.65…\n\n\nH0003\n0\n121\nPOLYGON ((4345.122 30595.72…\n\n\nH0004\n0\n4\nPOLYGON ((4720.122 28647.16…\n\n\nH0005\n0\n152\nPOLYGON ((4720.122 29946.2,…\n\n\nH0006\n0\n204\nPOLYGON ((4720.122 31245.24…\n\n\n\n\n\nSave point:\n\nwrite_rds(propulsiveness, \"Take-home Exercise 2/data/rds/propulsiveness202310.rds\")\n\n\nrm(dest_bus_hex)\nrm(hdb_vars)\n\n\n\n\n\nhoneycomb &lt;- read_rds(\"Take-home Exercise 2/data/rds/honeycomb.rds\")\n\nNow that we have the attractive and propulsive forces, we can finally prepare the data for the distance decay component of the model.\n\n\nWe will use spDists() to generate the matrix from our honeycomb, which requires a Spatial data frame. We also need to name the columns and rows to the corresponding HEX_ID of the hexagons.\n\ndist_mat &lt;- spDists(as(honeycomb, \"Spatial\"),\n                    longlat = FALSE)\ncolnames(dist_mat) &lt;- paste0(honeycomb$HEX_ID)\nrownames(dist_mat) &lt;- paste0(honeycomb$HEX_ID)\nkable(head(dist_mat, n=c(8, 8)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nH0001\nH0002\nH0003\nH0004\nH0005\nH0006\nH0007\nH0008\n\n\n\n\nH0001\n0.000\n750.000\n3269.174\n1500.000\n2704.163\n3968.627\n1299.038\n2250.000\n\n\nH0002\n750.000\n0.000\n2598.076\n750.000\n1984.313\n3269.174\n750.000\n1500.000\n\n\nH0003\n3269.174\n2598.076\n0.000\n1984.313\n750.000\n750.000\n2704.163\n1500.000\n\n\nH0004\n1500.000\n750.000\n1984.313\n0.000\n1299.038\n2598.076\n750.000\n750.000\n\n\nH0005\n2704.163\n1984.313\n750.000\n1299.038\n0.000\n1299.038\n1984.313\n750.000\n\n\nH0006\n3968.627\n3269.174\n750.000\n2598.076\n1299.038\n0.000\n3269.174\n1984.313\n\n\nH0007\n1299.038\n750.000\n2704.163\n750.000\n1984.313\n3269.174\n0.000\n1299.038\n\n\nH0008\n2250.000\n1500.000\n1500.000\n750.000\n750.000\n1984.313\n1299.038\n0.000\n\n\n\n\n\n\n\n\nTo generate data with the specifications we defined in Data Outputs, we must generate a pivot table from our distance matrix, dist_mat.\nWe will use melt(), for this purpose and rename the columns to names we defined in our modelling data shape.\n\ndist_tbl &lt;- melt(dist_mat) %&gt;%\n  rename(DISTANCE = value) %&gt;%\n  rename(ORIG_HEX_ID = Var1) %&gt;%\n  rename(DEST_HEX_ID = Var2)\nkable(head(dist_tbl))\n\n\n\n\nORIG_HEX_ID\nDEST_HEX_ID\nDISTANCE\n\n\n\n\nH0001\nH0001\n0.000\n\n\nH0002\nH0001\n750.000\n\n\nH0003\nH0001\n3269.174\n\n\nH0004\nH0001\n1500.000\n\n\nH0005\nH0001\n2704.163\n\n\nH0006\nH0001\n3968.627\n\n\n\n\n\n\n\n\n\ndist_tbl$DISTANCE[dist_tbl$ORIG_HEX_ID == dist_tbl$DEST_HEX_ID] &lt;- 200\nsummary(dist_tbl$DISTANCE)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    200    8250   13332   14145   18929   44680 \n\n\n\nwrite_rds(dist_tbl, \"Take-home Exercise 2/data/rds/dist_tbl.rds\")\n\n\nrm(dist_mat)\n\n\n\n\n\n10.1 Generate SIM_data\n\nhoneycomb &lt;- read_rds(\"Take-home Exercise 2/data/rds/honeycomb.rds\")\nflowlines &lt;- read_rds(\"Take-home Exercise 2/data/rds/flowlines202310.rds\")\ndist_tbl &lt;- read_rds(\"Take-home Exercise 2/data/rds/dist_tbl.rds\")\nattractiveness &lt;- read_rds(\"Take-home Exercise 2/data/rds/attractiveness.rds\")\npropulsiveness &lt;- read_rds(\"Take-home Exercise 2/data/rds/propulsiveness202310.rds\")\n\nNow that we have all the components, we will now generate the geospatial data that contains the following columns:\n\nORIG_HEX_ID: ID corresponding to the origin zone\nDEST_HEX_ID: ID corresponding to the destination zone\nDISTANCE: Distance between the (centroids of) origin and destination zones\nTRIPS: Number of bus trips between the origin and destination zones\nDEST_*_COUNT: Values from [Attractiveness Variables Table (attractiveness)]\nORIG_*_COUNT: Values from [Propulsiveness Variables Table (propulsiveness)]\nGeometry containing the flowlines\n\nWe will join the tables to generate this data.\nFlowlines:\n\nkable(head(flowlines))\n\n\n\n\nORIG_HEX_ID\nDEST_HEX_ID\nTRIPS\ngeometry\n\n\n\n\nH0002\nH0016\n1\nLINESTRING (4345.122 28430….\n\n\nH0002\nH0017\n2\nLINESTRING (4345.122 28430….\n\n\nH0002\nH0032\n16\nLINESTRING (4345.122 28430….\n\n\nH0003\nH0005\n1\nLINESTRING (4345.122 31028….\n\n\nH0003\nH0022\n56\nLINESTRING (4345.122 31028….\n\n\nH0003\nH0028\n10\nLINESTRING (4345.122 31028….\n\n\n\n\n\n\nSIM_data &lt;- flowlines\n\nDistance:\n\nSIM_data &lt;- SIM_data %&gt;% left_join(dist_tbl)\n\nJoining with `by = join_by(ORIG_HEX_ID, DEST_HEX_ID)`\n\n\nPropulsive:\n\nSIM_data &lt;- left_join(\n  SIM_data,\n  propulsiveness %&gt;%\n    st_drop_geometry() %&gt;%\n    rename_with(~paste(\"ORIG_\", .x, sep = \"\"))\n  )\n\nJoining with `by = join_by(ORIG_HEX_ID)`\n\n\nAttractive:\n\nSIM_data &lt;- left_join(\n  SIM_data,\n  attractiveness %&gt;%\n    st_drop_geometry() %&gt;%\n    rename_with(~paste(\"DEST_\", .x, sep = \"\"))\n  )\n\nJoining with `by = join_by(DEST_HEX_ID)`\n\n\nWe can now clear the data that we have used for “SIM_data” from the environment.\n\nrm(attractiveness)\nrm(propulsiveness)\nrm(dist_tbl)\nrm(flowlines)\n\n\n\n\nsummary(SIM_data)\n\n  ORIG_HEX_ID     DEST_HEX_ID        TRIPS             DISTANCE    \n H0518  :  307   H0518  :  314   Min.   :    1.00   Min.   :  200  \n H0728  :  291   H0540  :  300   1st Qu.:    3.00   1st Qu.: 2704  \n H0521  :  285   H0530  :  297   Median :   12.00   Median : 5250  \n H0530  :  282   H0728  :  297   Mean   :   96.74   Mean   : 6117  \n H0491  :  278   H0521  :  290   3rd Qu.:   48.00   3rd Qu.: 8518  \n H0651  :  268   H0450  :  280   Max.   :33266.00   Max.   :24784  \n (Other):58135   (Other):58068                                     \n ORIG_HDB_RESIDENT_COUNT ORIG_BUS_ALIGHT_COUNT DEST_BUS_STOP_COUNT\n Min.   :   0            Min.   :     0        Min.   : 1.00      \n 1st Qu.:   0            1st Qu.:  3459        1st Qu.: 5.00      \n Median : 932            Median :  8693        Median : 8.00      \n Mean   :1850            Mean   : 14148        Mean   : 7.96      \n 3rd Qu.:3351            3rd Qu.: 16757        3rd Qu.:10.00      \n Max.   :7946            Max.   :108111        Max.   :19.00      \n                                                                  \n DEST_ENTERTN_COUNT DEST_F_AND_B_COUNT DEST_LEISURE_COUNT DEST_RETAIL_COUNT\n Min.   :0.0000     Min.   :  0.000    Min.   : 0.000     Min.   :   0.00  \n 1st Qu.:0.0000     1st Qu.:  0.000    1st Qu.: 0.000     1st Qu.:   7.00  \n Median :0.0000     Median :  0.000    Median : 1.000     Median :  31.00  \n Mean   :0.3442     Mean   :  5.696    Mean   : 2.336     Mean   :  98.31  \n 3rd Qu.:0.0000     3rd Qu.:  2.000    3rd Qu.: 3.000     3rd Qu.: 110.00  \n Max.   :9.0000     Max.   :133.000    Max.   :41.000     Max.   :1678.00  \n                                                                           \n DEST_TRAIN_EXITS_COUNT DEST_HDB_COUNT            geometry    \n Min.   : 0.000         Min.   :  0.00   LINESTRING   :59846  \n 1st Qu.: 0.000         1st Qu.:  0.00   epsg:NA      :    0  \n Median : 0.000         Median : 12.00   +proj=tmer...:    0  \n Mean   : 1.375         Mean   : 20.81                        \n 3rd Qu.: 2.000         3rd Qu.: 36.00                        \n Max.   :13.000         Max.   :103.00                        \n                                                              \n\n\nNow we will make finishing touches on SIM_data , so that they are compatible with modeling. We need to remove the 0’s as we will apply log function to them, which will result to undefined.\nSet them to 0.99.\n\nreplace_zeroes &lt;- function(data, col_name) {\n  data[[col_name]][data[[col_name]] == 0] &lt;- 0.99\n  data\n}\n\n\nsummary(SIM_data)\n\n  ORIG_HEX_ID     DEST_HEX_ID        TRIPS             DISTANCE    \n H0518  :  307   H0518  :  314   Min.   :    1.00   Min.   :  200  \n H0728  :  291   H0540  :  300   1st Qu.:    3.00   1st Qu.: 2704  \n H0521  :  285   H0530  :  297   Median :   12.00   Median : 5250  \n H0530  :  282   H0728  :  297   Mean   :   96.74   Mean   : 6117  \n H0491  :  278   H0521  :  290   3rd Qu.:   48.00   3rd Qu.: 8518  \n H0651  :  268   H0450  :  280   Max.   :33266.00   Max.   :24784  \n (Other):58135   (Other):58068                                     \n ORIG_HDB_RESIDENT_COUNT ORIG_BUS_ALIGHT_COUNT DEST_BUS_STOP_COUNT\n Min.   :   0            Min.   :     0        Min.   : 1.00      \n 1st Qu.:   0            1st Qu.:  3459        1st Qu.: 5.00      \n Median : 932            Median :  8693        Median : 8.00      \n Mean   :1850            Mean   : 14148        Mean   : 7.96      \n 3rd Qu.:3351            3rd Qu.: 16757        3rd Qu.:10.00      \n Max.   :7946            Max.   :108111        Max.   :19.00      \n                                                                  \n DEST_ENTERTN_COUNT DEST_F_AND_B_COUNT DEST_LEISURE_COUNT DEST_RETAIL_COUNT\n Min.   :0.0000     Min.   :  0.000    Min.   : 0.000     Min.   :   0.00  \n 1st Qu.:0.0000     1st Qu.:  0.000    1st Qu.: 0.000     1st Qu.:   7.00  \n Median :0.0000     Median :  0.000    Median : 1.000     Median :  31.00  \n Mean   :0.3442     Mean   :  5.696    Mean   : 2.336     Mean   :  98.31  \n 3rd Qu.:0.0000     3rd Qu.:  2.000    3rd Qu.: 3.000     3rd Qu.: 110.00  \n Max.   :9.0000     Max.   :133.000    Max.   :41.000     Max.   :1678.00  \n                                                                           \n DEST_TRAIN_EXITS_COUNT DEST_HDB_COUNT            geometry    \n Min.   : 0.000         Min.   :  0.00   LINESTRING   :59846  \n 1st Qu.: 0.000         1st Qu.:  0.00   epsg:NA      :    0  \n Median : 0.000         Median : 12.00   +proj=tmer...:    0  \n Mean   : 1.375         Mean   : 20.81                        \n 3rd Qu.: 2.000         3rd Qu.: 36.00                        \n Max.   :13.000         Max.   :103.00                        \n                                                              \n\n\nSave point:\n\nwrite_rds(SIM_data, \"Take-home Exercise 2/data/rds/SIM_data202310.rds\")\n\n\nrm(SIM_data)\nrm(replace_zeroes)\n\n\n\n\n\n\nmpsz &lt;- read_rds(\"Take-home Exercise 2/data/rds/mpsz.rds\")\nhoneycomb &lt;- read_rds(\"Take-home Exercise 2/data/rds/honeycomb.rds\")\nflowlines &lt;- read_rds(\"Take-home Exercise 2/data/rds/flowlines202310.rds\")\nSIM_data &lt;- read_rds(\"Take-home Exercise 2/data/rds/SIM_data202310.rds\")\npropulsiveness &lt;- read_rds(\"Take-home Exercise 2/data/rds/propulsiveness202310.rds\")\nattractiveness &lt;- read_rds(\"Take-home Exercise 2/data/rds/attractiveness.rds\")\n\n\n\n\nflowlines_no_intra &lt;- flowlines %&gt;%\n  filter(ORIG_HEX_ID != DEST_HEX_ID)\n\n\nquantile(flowlines_no_intra$TRIPS,\n         probs = c(0.8,0.9,0.95,0.99,1))\n\n     80%      90%      95%      99%     100% \n   67.00   171.00   377.00  1519.14 33266.00 \n\n\nLet’s take a look at the map.\n\ninvalid_geoms &lt;- which(!st_is_valid(mpsz))\n\n# If there are invalid geometries, fix them\nif(length(invalid_geoms) &gt; 0) {\n  mpsz[invalid_geoms, ] &lt;- st_make_valid(mpsz[invalid_geoms, ])\n}\n\n\ntm_shape(mpsz) +\n  tm_polygons(\"grey\", title = \"Singapore Boundary\", alpha = 0.5) +\n  \n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  \n  tm_shape(flowlines_no_intra %&gt;% filter(TRIPS &gt; 376)) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"red\",\n           scale = c(0.1, 1, 3, 5, 7),\n           title.lwd = \"# of bus trips\",\n           alpha = 0.8) +\n  \n  tm_layout(main.title = \"Top 5% Bus Passenger flow for Weekends/Holidays 11 AM - 2PM (October 2023)\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_grid(alpha = 0.2)\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\nInsights\nIt is notable that the thickest flow lines are for relatively short distances, like the bus rides to and from Woodlands Checkpoint to Kranji Station. We can notice these thick lines on busy zones where lines converge as well.\nAlthough not as thick, we can notice longer long lines on the map. This can indicate people more willing to travel longer distances over the weekend for recreation and meeting family and friends. This also means that a location being close by is not the only motivator for people to visit a place. Spatial interaction model can reveal more patterns to this.\n\n\n\n\n\nggplot(SIM_data,\n       aes(x = DISTANCE, y = TRIPS)) +\n  geom_point() +\n  geom_hline(yintercept = 376.25, color = \"red\", linetype = \"dashed\") +\n  annotate(\"text\", x = 20000,\n           y = 600, label = \"95th percentile\",\n           hjust = -0.1, color = \"red\", size = 3) +\n  geom_hline(yintercept = 1510, color = \"blue\", linetype = \"dashed\") +\n  annotate(\"text\", x = 20000,\n           y = 1800, label = \"99th percentile\",\n           hjust = -0.1, color = \"blue\", size = 3) +\n  labs(title = \"Number of Trips as a Function of Distance\",\n       x = \"Distance (m)\",\n       y = \"Number of Trips\")\n\n\n\n\nPlotting it in a log scale shows a more linear relationship.\n\nggplot(SIM_data,\n       aes(x = log(DISTANCE), y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nInsights\nThe maximum number of trips exponentially decrease as the distance increases, which means that generally, the farther the distance, the less trips there are.\nHowever, some outliers can be observed like some zone pairs with almost 20km distance between them having close to 99th percentile of TRIP values. In these zone pairs, there could be strong propulsive or attractive forces attracting passengers to ride the bus between those zones.\n\n\n\n\nplot_propulsive &lt;- function(var_name, title_comp) {\n  tm_shape(mpsz) +\n  tm_polygons(\"gray\", title = \"Singapore Boundary\") +\n  \n  # Adding this layer underneath propulsiveness as we removed 0s. from the map\n  # so it won't skew the legend\n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\") +\n  \n  tm_shape(propulsiveness %&gt;% filter(if_any(var_name, ~. &gt;= 1))) +\n  tm_polygons(var_name, palette = \"Blues\", style = \"quantile\") +\n    \n  tm_shape(flowlines_no_intra %&gt;% filter(TRIPS &gt; 376)) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"orange\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           title.lwd = \"# of bus trips\",\n           n = 6,\n           alpha = 0.5) +\n  \n  tm_layout(main.title = paste(\"Top 5% Bus Passenger Flows and\", title_comp),\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.7, position = c(\"right\", \"top\")) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\",\n             bg.alpha = 0.5, position = c(\"right\", \"top\")) +\n  tm_grid(alpha = 0.2) +\n  tm_credits(\"*Passenger data from weekend/holidays 11AM - 2PM\\n(October 2023)\",\n             bg.color = \"white\", bg.alpha = 0.7,\n             position = c(\"left\", \"bottom\"))\n}\n\n\n\n\nplot_propulsive(\"HDB_RESIDENT_COUNT\", \"HDB POPULATION\")\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(var_name)\n\n  # Now:\n  data %&gt;% select(all_of(var_name))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_propulsive(\"BUS_ALIGHT_COUNT\", \"Transfer by BUS\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\nInsights\nUpon visual inspection, HDB population and bus alights from zones correspond closely with our flowlines.\n\n\n\n\nIn this section, we plot attractive forces in their own choropleth maps to see if the top 5% flows correspond to areas we hypothesize have high attractive forces.\n\nplot_attractive &lt;- function(var_name, title_comp) {\n  tm_shape(mpsz) +\n  tm_polygons(\"gray\", title = \"Singapore Boundary\") +\n  \n  # Adding this layer underneath attractiveness as we removed 0s. from the map\n  # so it won't skew the legend\n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\") +\n  \n  tm_shape(attractiveness %&gt;% filter(if_any(var_name, ~. &gt;= 1))) +\n  tm_polygons(var_name, palette = \"Purples\", style = \"quantile\") +\n    \n  tm_shape(flowlines_no_intra %&gt;% filter(TRIPS &gt; 376)) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"red\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           title.lwd = \"# of bus trips\",\n           n = 6,\n           alpha = 0.5) +\n  \n  tm_layout(main.title = paste(\"Top 5% Bus Passenger Flows and\", title_comp),\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.7, position = c(\"right\", \"top\")) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\",\n             bg.alpha = 0.5, position = c(\"right\", \"top\")) +\n  tm_grid(alpha = 0.2) +\n  tm_credits(\"*Passenger data from weekend/holidays 11AM - 2PM\\n(October 2023)\",\n             bg.color = \"white\", bg.alpha = 0.7,\n             position = c(\"left\", \"bottom\"))\n}\n\n\n\n\nplot_attractive(\"BUS_STOP_COUNT\", \"Number of Busstops\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_attractive(\"HDB_COUNT\", \"Number of HDB\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_attractive(\"ENTERTN_COUNT\", \"Number of Entertainment Items\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_attractive(\"F_AND_B_COUNT\", \"Number of F&B Outlets\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_attractive(\"LEISURE_COUNT\", \"Number of Leisure&Recreation Items\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_attractive(\"RETAIL_COUNT\", \"Number of Retail\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\nInsights\nThere are less location types than the others, like entertainment and leisure locations.\nThere are also location types that are heavily concentrated in some zones, like the entertainment and F&B, which are heavily concentrated around the Orchard area. Conversely, there are much less HDBs in Orchard area. Even though the flowlines are not thick in this area, there are many flowlines, although thin. This means people are coming from various parts of Singapore.\nSave point\n\nwrite_rds(flowlines_no_intra, \"Take-home Exercise 2/data/rds/flowines_no_intra202310.rds\")\n\n\nrm(flowlines)\nrm(attractiveness)\nrm(propulsiveness)\nrm(plot_attractive)\nrm(plot_propulsive)"
  },
  {
    "objectID": "Take-home-Ex2.html#background",
    "href": "Take-home-Ex2.html#background",
    "title": "Take home Ex2",
    "section": "",
    "text": "The scenario highlights the challenges in urban mobility, specifically understanding commuting patterns and the impact of public transportation changes. Traditional methods like commuter surveys are outdated and inefficient. The focus shifts to leveraging digital infrastructure data, such as GPS and SMART card usage, for more dynamic and insightful analysis.The exercise is motivated by two factors: the underutilization of available open data for policy making and the need for practical research in geospatial data science and analysis (GDSA). The task involves using GDSA to integrate diverse data sources, building spatial interaction models to understand public bus transit patterns. This approach aims to provide more effective tools for urban planning and decision-making."
  },
  {
    "objectID": "Take-home-Ex2.html#the-data",
    "href": "Take-home-Ex2.html#the-data",
    "title": "Take home Ex2",
    "section": "",
    "text": "For the purpose of this assignment, data from several open government sources will be used:\n\nPassenger Volume by Origin Destination Bus Stops, Bus Stop Location, Train Station and Train Station Exit Point, just to name a few of them, from LTA DataMall.\nMaster Plan 2019 Subzone Boundary, HDB Property Information, School Directory and Information and other relevant data from Data.gov.sg.\nhexagon, a hexagon layer of 250m (this distance is the perpendicular distance between the centre of the hexagon and its edges.) should be used to replace the relative coarse and irregular Master Plan 2019 Planning Sub-zone GIS data set of URA."
  },
  {
    "objectID": "Take-home-Ex2.html#getting-started",
    "href": "Take-home-Ex2.html#getting-started",
    "title": "Take home Ex2",
    "section": "",
    "text": "pacman::p_load(sf, sp, tmap, tidyverse, knitr, stplanr, reshape2, performance)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_style(\"natural\")\n\ntmap style set to \"natural\"\n\n\nother available styles are: \"white\", \"gray\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\nset.seed(1234)"
  },
  {
    "objectID": "Take-home-Ex2.html#data-preparation",
    "href": "Take-home-Ex2.html#data-preparation",
    "title": "Take home Ex2",
    "section": "",
    "text": "Firstly, we will import the Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall by using read_csv() of readr package.\n\nodbus &lt;- read_csv(\"Take-home Exercise 2/data/aspatial/origin_destination_bus_202310.csv\")\n\nRows: 5694297 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): YEAR_MONTH, DAY_TYPE, PT_TYPE, ORIGIN_PT_CODE, DESTINATION_PT_CODE\ndbl (2): TIME_PER_HOUR, TOTAL_TRIPS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nkable(head(odbus))\n\n\n\n\n\n\n\n\n\n\n\n\n\nYEAR_MONTH\nDAY_TYPE\nTIME_PER_HOUR\nPT_TYPE\nORIGIN_PT_CODE\nDESTINATION_PT_CODE\nTOTAL_TRIPS\n\n\n\n\n2023-10\nWEEKENDS/HOLIDAY\n16\nBUS\n04168\n10051\n3\n\n\n2023-10\nWEEKDAY\n16\nBUS\n04168\n10051\n5\n\n\n2023-10\nWEEKENDS/HOLIDAY\n14\nBUS\n80119\n90079\n3\n\n\n2023-10\nWEEKDAY\n14\nBUS\n80119\n90079\n5\n\n\n2023-10\nWEEKDAY\n17\nBUS\n44069\n17229\n4\n\n\n2023-10\nWEEKENDS/HOLIDAY\n17\nBUS\n20281\n20141\n1\n\n\n\n\n\n\n\n\nFor the purpose of this exercise, three geospatial data will be used first. They are:\n\nBusStop: This data provides the location of bus stop as at last quarter of 2023.\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.\nHexagon: analytical hexagon data of 375m (this distance is the perpendicular distance between the centre of the hexagon and its edges) to represent the traffic analysis zone (TAZ).\n\n\nmpsz &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\",\n                layer = \"MPSZ-2019\") %&gt;%\n  select(SUBZONE_N)\n\nReading layer `MPSZ-2019' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nbusstops &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\",\n                    layer = \"BusStop\")\n\nReading layer `BusStop' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nwrite_rds(mpsz, \"Take-home Exercise 2/data/rds/mpsz.rds\")\nwrite_rds(busstops, \"Take-home Exercise 2/data/rds/busstops.rds\")\n\n\n\n\n\nhoneycomb &lt;- busstops %&gt;% st_make_grid(cellsize = 750,\n                                       what=\"polygons\",\n                                       square = FALSE) %&gt;%\n  st_sf() %&gt;%\n  filter(lengths(st_intersects(geometry, busstops)) &gt; 0)\n\nNow that we have hexagons properly generated, we will assign id for each hexagon to be used as a unique identifier. We will store this id under the HEX_ID column, and can be used in joining data frames.\n\nhoneycomb$HEX_ID &lt;- sprintf(\"H%04d\", seq_len(nrow(honeycomb))) %&gt;% as.factor()\nkable(head(honeycomb))\n\n\n\n\ngeometry\nHEX_ID\n\n\n\n\nPOLYGON ((3970.122 27348.13…\nH0001\n\n\nPOLYGON ((4345.122 27997.65…\nH0002\n\n\nPOLYGON ((4345.122 30595.72…\nH0003\n\n\nPOLYGON ((4720.122 28647.16…\nH0004\n\n\nPOLYGON ((4720.122 29946.2,…\nH0005\n\n\nPOLYGON ((4720.122 31245.24…\nH0006\n\n\n\n\n\n\nwrite_rds(honeycomb, \"Take-home Exercise 2/data/rds/honeycomb.rds\")"
  },
  {
    "objectID": "Take-home-Ex2.html#spatial-interaction-analysis",
    "href": "Take-home-Ex2.html#spatial-interaction-analysis",
    "title": "Take home Ex2",
    "section": "",
    "text": "We only need the data for the weekend morning peak period, which is from 11 AM - 2 PM on weekends and holidays. As such, we will filter the data for the relevant hours.\n\nod_trips &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %&gt;%\n  filter( TIME_PER_HOUR &gt;= 11 &\n            TIME_PER_HOUR &lt; 14\n          ) %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n  rename(\n    ORIG_BUS_STOP_N = ORIGIN_PT_CODE,\n    DEST_BUS_STOP_N = DESTINATION_PT_CODE\n  )\n\n`summarise()` has grouped output by 'ORIGIN_PT_CODE'. You can override using\nthe `.groups` argument.\n\nkable(head(od_trips))\n\n\n\n\nORIG_BUS_STOP_N\nDEST_BUS_STOP_N\nTRIPS\n\n\n\n\n01012\n01112\n204\n\n\n01012\n01113\n129\n\n\n01012\n01121\n95\n\n\n01012\n01211\n91\n\n\n01012\n01311\n152\n\n\n01012\n01559\n5\n\n\n\n\n\n\nrm(odbus)\n\nTo connect the trip data to the their corresponding hexagon, we need to create a lookup table. This will serve as a glue in associating the aspatial od_trips data frame to the honeycomb data frame.\nThis can be done via st_intersection().\n\nbs_hex &lt;- st_intersection(busstops, honeycomb) %&gt;%\n  st_drop_geometry() %&gt;%\n  select(c(BUS_STOP_N, HEX_ID))\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\nkable(head(bs_hex))\n\n\n\n\n\nBUS_STOP_N\nHEX_ID\n\n\n\n\n3269\n25059\nH0001\n\n\n2570\n25751\nH0002\n\n\n254\n26379\nH0003\n\n\n2403\n26369\nH0003\n\n\n2829\n25741\nH0004\n\n\n1715\n26399\nH0005\n\n\n\n\n\n\n\n\nNext, we need to associate each origin bus stop and destination bus stop to their corresponding hexagons.\nWe can use that by doing inner_join() twice, once for the origin and another for the destination.\n\nod_trips_w_hex &lt;- od_trips %&gt;%\n  inner_join(bs_hex,\n             by = c(\"ORIG_BUS_STOP_N\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIG_HEX_ID = HEX_ID) %&gt;%\n  inner_join(bs_hex,\n             by = c(\"DEST_BUS_STOP_N\" = \"BUS_STOP_N\")) %&gt;%\n  rename(DEST_HEX_ID = HEX_ID)\n\nWarning in inner_join(., bs_hex, by = c(ORIG_BUS_STOP_N = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 25339 of `x` matches multiple rows in `y`.\nℹ Row 3057 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nWarning in inner_join(., bs_hex, by = c(DEST_BUS_STOP_N = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 186 of `x` matches multiple rows in `y`.\nℹ Row 3146 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nkable(head(od_trips_w_hex))\n\n\n\n\nORIG_BUS_STOP_N\nDEST_BUS_STOP_N\nTRIPS\nORIG_HEX_ID\nDEST_HEX_ID\n\n\n\n\n01012\n01112\n204\nH0518\nH0530\n\n\n01012\n01113\n129\nH0518\nH0530\n\n\n01012\n01121\n95\nH0518\nH0553\n\n\n01012\n01211\n91\nH0518\nH0553\n\n\n01012\n01311\n152\nH0518\nH0564\n\n\n01012\n01559\n5\nH0518\nH0553\n\n\n\n\n\n\n\n\nNext, we will perform aggregations by ORIG_HEX_ID and DEST_HEX_ID to have an aggregated sum of trips by hexagon instead of bus stops.\n\nod_hex &lt;- od_trips_w_hex %&gt;%\n  group_by(ORIG_HEX_ID, DEST_HEX_ID) %&gt;%\n  summarise(TRIPS = sum(TRIPS))\n\n`summarise()` has grouped output by 'ORIG_HEX_ID'. You can override using the\n`.groups` argument.\n\nkable(head(od_hex))\n\n\n\n\nORIG_HEX_ID\nDEST_HEX_ID\nTRIPS\n\n\n\n\nH0002\nH0016\n1\n\n\nH0002\nH0017\n2\n\n\nH0002\nH0032\n16\n\n\nH0003\nH0005\n1\n\n\nH0003\nH0022\n56\n\n\nH0003\nH0028\n10\n\n\n\n\n\nSave point:\n\nwrite_rds(bs_hex, \"Take-home Exercise 2/data/rds/bs_hex.rds\")\nwrite_rds(od_hex, \"Take-home Exercise 2/data/rds/od_hex202310.rds\")\nwrite_rds(od_trips, \"Take-home Exercise 2/data/rds/od_trips202310.rds\")\n\n\nrm(od_trips_w_hex)\n\n\n\n\n\nFirst, we will generate the flow lines using od2line(). honeycomb will be supplied as the zone as it contains the hexagons we are using as the traffic analysis zones.\n\ninvalid_geoms &lt;- which(!st_is_valid(mpsz))\n\n# If there are invalid geometries, fix them\nif(length(invalid_geoms) &gt; 0) {\n  mpsz[invalid_geoms, ] &lt;- st_make_valid(mpsz[invalid_geoms, ])\n}\n\n\nflowlines &lt;- od_hex %&gt;% od2line(\n  honeycomb,\n  zone_code = \"HEX_ID\")\n\nCreating centroids representing desire line start and end points.\n\nwrite_rds(flowlines, \"Take-home Exercise 2/data/rds/flowlines202310.rds\")\n\n\ntm_shape(mpsz) +\n  tm_polygons(\"gray\", title = \"Singapore Boundary\", alpha = 0.5) +\n  \n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  \n  tm_shape(flowlines) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"red\",\n           scale = c(0.1, 1, 3, 5, 7),\n           title.lwd = \"# of bus trips\",\n           alpha = 0.8) +\n  \n  tm_layout(main.title = \"Bus Passenger flow for Weekends/Holidays 11 AM - 2PM (October 2023)\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_grid(alpha = 0.2)\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\nwrite_rds(flowlines, \"Take-home Exercise 2/data/rds/flowlines202310.rds\")\n\n\nrm(flowlines)\nrm(od_hex)"
  },
  {
    "objectID": "Take-home-Ex2.html#spatial-interaction-modelling",
    "href": "Take-home-Ex2.html#spatial-interaction-modelling",
    "title": "Take home Ex2",
    "section": "",
    "text": "Next, we will prepare the data needed for spatial interaction modelling. Some of these are straightforward to get, especially those of attractiveness variables. Additional steps are needed for more complex data sets, like those needed for propulsiveness variables. We will derive those in a separate section.\n\n\nWe will first initiate attractiveness from honeycomb.\n\nattractiveness &lt;- honeycomb\n\nBecause not all of the st_cos(x) == st_crs(y) are ture, it’s crucial for all datasets to be in the same CRS before performing spatial operations like intersections. The next steps will all tackle this problem.\nBUSSTOP:\n\nattractiveness$BUS_STOP_COUNT &lt;- lengths(\n  st_intersects(attractiveness, busstops))\n\nENTERTAINMENT:\n\nentertn &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\", layer = \"entertn\")\n\nReading layer `entertn' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 114 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 10809.34 ymin: 26528.63 xmax: 41600.62 ymax: 46375.77\nProjected CRS: SVY21 / Singapore TM\n\n\n\nst_crs(attractiveness)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(entertn)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nentertn &lt;- st_transform(entertn, st_crs(attractiveness))\n\n\nattractiveness &lt;- st_transform(attractiveness, st_crs(entertn))\n\n\nattractiveness$ENTERTN_COUNT &lt;- lengths(st_intersects(attractiveness, entertn))\n\n\nattractiveness$ENTERTN_COUNT &lt;- lengths(st_intersects(attractiveness, entertn))\n\nF&B:\n\nf_and_b &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\", layer = \"F&B\")\n\nReading layer `F&B' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1919 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25343.27 xmax: 45462.43 ymax: 48796.21\nProjected CRS: SVY21 / Singapore TM\n\n\n\nst_crs(attractiveness)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(f_and_b)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nf_and_b &lt;- st_transform(f_and_b, st_crs(attractiveness))\nattractiveness &lt;- st_transform(attractiveness, st_crs(f_and_b))\nattractiveness$F_AND_B_COUNT &lt;- lengths(st_intersects(attractiveness, f_and_b))\n\n\nattractiveness$F_AND_B_COUNT &lt;- lengths(st_intersects(attractiveness, f_and_b))\n\nLeisure&Recreation:\n\nleis_rec &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\", layer = \"Liesure&Recreation\")\n\nReading layer `Liesure&Recreation' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1217 features and 30 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25134.28 xmax: 48439.77 ymax: 50078.88\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntm_shape(mpsz) +\n  tm_polygons(\"green\", title = \"Singapore Boundary\", alpha = 0.5) +\n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  tm_layout(main.title = \"Map of Leisure & Recreation Spots in Singapore\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_shape(leis_rec) +\n  tm_dots(col = \"red\", size = 0.005, title = \"Leisure & Recreation Spots\") +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\nst_crs(attractiveness)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(leis_rec)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nleis_rec &lt;- st_transform(leis_rec, st_crs(attractiveness))\nattractiveness &lt;- st_transform(attractiveness, st_crs(leis_rec))\nattractiveness$LEISURE_COUNT &lt;- lengths(st_intersects(attractiveness, leis_rec))\n\n\nattractiveness$LEISURE_COUNT &lt;- lengths(st_intersects(attractiveness, leis_rec))\n\nRETAIL:\n\nretail &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\", layer = \"Retails\")\n\nReading layer `Retails' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 37635 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4737.982 ymin: 25171.88 xmax: 48265.04 ymax: 50135.28\nProjected CRS: SVY21 / Singapore TM\n\n\n\nst_crs(attractiveness)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(retail)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nretail &lt;- st_transform(retail, st_crs(attractiveness))\nattractiveness &lt;- st_transform(attractiveness, st_crs(retail))\nattractiveness$RETAIL_COUNT &lt;- lengths(st_intersects(attractiveness, retail))\n\n\nattractiveness$RETAIL_COUNT &lt;- lengths(st_intersects(attractiveness, retail))\n\nTRAIN STATION EXITS:\n\ntrain_exits &lt;- st_read(dsn = \"Take-home Exercise 2/data/geospatial\", layer = \"Train_Station_Exit_Layer\")\n\nReading layer `Train_Station_Exit_Layer' from data source \n  `D:\\y1zaoWang\\ISSS624\\Take-home Exercise 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 565 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6134.086 ymin: 27499.7 xmax: 45356.36 ymax: 47865.92\nProjected CRS: SVY21\n\n\n\ntm_shape(mpsz) +\n  tm_polygons(\"green\", title = \"Singapore Boundary\", alpha = 0.5) +\n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  tm_layout(main.title = \"Map of Train Station Exits in Singapore\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_shape(train_exits) +\n  tm_dots(col = \"red\", size = 0.005, title = \"Train Station Exits\") +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\nst_crs(attractiveness)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(train_exits)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\ntrain_exits &lt;- st_transform(train_exits, st_crs(attractiveness))\nattractiveness &lt;- st_transform(attractiveness, st_crs(train_exits))\nattractiveness$TRAIN_EXITS_COUNT &lt;- lengths(st_intersects(attractiveness, train_exits))\n\n\nattractiveness$TRAIN_EXITS_COUNT &lt;- lengths(st_intersects(attractiveness, train_exits))\n\nLet’s check if the attractiveness variables have been added correctly.\n\nkable(head(attractiveness))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngeometry\nHEX_ID\nBUS_STOP_COUNT\nENTERTN_COUNT\nF_AND_B_COUNT\nLEISURE_COUNT\nRETAIL_COUNT\nTRAIN_EXITS_COUNT\n\n\n\n\nPOLYGON ((3970.122 27348.13…\nH0001\n1\n0\n0\n0\n0\n0\n\n\nPOLYGON ((4345.122 27997.65…\nH0002\n1\n0\n0\n0\n0\n0\n\n\nPOLYGON ((4345.122 30595.72…\nH0003\n2\n0\n0\n0\n0\n0\n\n\nPOLYGON ((4720.122 28647.16…\nH0004\n1\n0\n0\n0\n0\n0\n\n\nPOLYGON ((4720.122 29946.2,…\nH0005\n4\n0\n0\n0\n5\n0\n\n\nPOLYGON ((4720.122 31245.24…\nH0006\n1\n0\n0\n0\n0\n0\n\n\n\n\n\n\nwrite_rds(attractiveness, \"Take-home Exercise 2/data/rds/attractiveness_no_hdb.rds\")\nwrite_rds(train_exits, \"Take-home Exercise 2/data/rds/train_exits.rds\")\n\n\nrm(busstops)\nrm(entertn)\nrm(f_and_b)\nrm(leis_rec)\nrm(retail)\n\n\n\n\nUsing the similar techniques used in Take-home Exercise 1, we will aggregate the trips using inner_join(), group_by, and summarise.\n\ndest_bus_hex &lt;- od_trips %&gt;%\n  inner_join(bs_hex,\n             by = join_by(DEST_BUS_STOP_N == BUS_STOP_N)) %&gt;%\n  group_by(HEX_ID) %&gt;%\n  summarise(TRIPS = sum(TRIPS))\n\nWarning in inner_join(., bs_hex, by = join_by(DEST_BUS_STOP_N == BUS_STOP_N)): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 186 of `x` matches multiple rows in `y`.\nℹ Row 3146 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nkable(head(dest_bus_hex))\n\n\n\n\nHEX_ID\nTRIPS\n\n\n\n\nH0002\n20\n\n\nH0003\n121\n\n\nH0004\n4\n\n\nH0005\n152\n\n\nH0006\n204\n\n\nH0007\n41\n\n\n\n\n\n\nwrite_rds(dest_bus_hex, \"Take-home Exercise 2/data/rds/dest_bus_hex202310.rds\")\n\n\nrm(bs_hex)\nrm(od_trips)"
  },
  {
    "objectID": "Take-home-Ex2.html#deriving-hdb-population",
    "href": "Take-home-Ex2.html#deriving-hdb-population",
    "title": "Take home Ex2",
    "section": "",
    "text": "hdb_vars &lt;- honeycomb\n\n\nhdb_csv &lt;- read_csv(\"Take-home Exercise 2/data/aspatial/hdb.csv\")\n\nNew names:\nRows: 12442 Columns: 37\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(18): blk_no, street, residential, commercial, market_hawker, miscellane... dbl\n(19): ...1, max_floor_lvl, year_completed, total_dwelling_units, 1room_s...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nkable(head(hdb_csv))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n…1\nblk_no\nstreet\nmax_floor_lvl\nyear_completed\nresidential\ncommercial\nmarket_hawker\nmiscellaneous\nmultistorey_carpark\nprecinct_pavilion\nbldg_contract_town\ntotal_dwelling_units\n1room_sold\n2room_sold\n3room_sold\n4room_sold\n5room_sold\nexec_sold\nmultigen_sold\nstudio_apartment_sold\n1room_rental\n2room_rental\n3room_rental\nother_room_rental\nlat\nlng\nbuilding\naddr\npostal\nSUBZONE_NO\nSUBZONE_N\nSUBZONE_C\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\n\n\n\n\n0\n1\nBEACH RD\n16\n1970\nY\nY\nN\nN\nN\nN\nKWN\n142\n0\n1\n138\n1\n2\n0\n0\n0\n0\n0\n0\n0\n1.295097\n103.8541\nRAFFLES HOTEL\n1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673\n189673\n2\nCITY HALL\nDTSZ02\nDOWNTOWN CORE\nDT\nCENTRAL REGION\nCR\n\n\n1\n1\nBEDOK STH AVE 1\n14\n1975\nY\nN\nN\nY\nN\nN\nBD\n206\n0\n0\n204\n0\n2\n0\n0\n0\n0\n0\n0\n0\n1.320852\n103.9337\nNIL\n1 BEDOK SOUTH AVENUE 1 SINGAPORE 460001\n460001\n6\nBEDOK SOUTH\nBDSZ06\nBEDOK\nBD\nEAST REGION\nER\n\n\n2\n1\nCANTONMENT RD\n2\n2010\nN\nY\nN\nN\nN\nN\nCT\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1.275488\n103.8414\nPINNACLE @ DUXTON\n1 CANTONMENT ROAD PINNACLE @ DUXTON SINGAPORE 080001\n080001\n3\nCHINATOWN\nOTSZ03\nOUTRAM\nOT\nCENTRAL REGION\nCR\n\n\n3\n1\nCHAI CHEE RD\n15\n1982\nY\nN\nN\nN\nN\nN\nBD\n102\n0\n0\n0\n10\n92\n0\n0\n0\n0\n0\n0\n0\n1.327969\n103.9227\nPING YI GARDENS\n1 CHAI CHEE ROAD PING YI GARDENS SINGAPORE 461001\n461001\n3\nKEMBANGAN\nBDSZ03\nBEDOK\nBD\nEAST REGION\nER\n\n\n4\n1\nCHANGI VILLAGE RD\n4\n1975\nY\nY\nN\nN\nN\nN\nPRC\n55\n0\n0\n54\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1.388610\n103.9881\nOCBC CHANGI VILLAGE ROAD - 7 ELEVEN\n1 CHANGI VILLAGE ROAD OCBC CHANGI VILLAGE ROAD - 7 ELEVEN SINGAPORE 500001\n500001\n1\nCHANGI POINT\nCHSZ01\nCHANGI\nCH\nEAST REGION\nER\n\n\n5\n1\nDELTA AVE\n25\n1982\nY\nN\nN\nN\nN\nN\nBM\n96\n0\n0\n0\n0\n96\n0\n0\n0\n0\n0\n0\n0\n1.292075\n103.8286\nNIL\n1 DELTA AVENUE SINGAPORE 160001\n160001\n9\nBUKIT HO SWEE\nBMSZ09\nBUKIT MERAH\nBM\nCENTRAL REGION\nCR\n\n\n\n\n\n\nhdb_sf &lt;- hdb_csv %&gt;% st_as_sf(coords = c(\"lng\", \"lat\"),\n                               crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\n\ntm_shape(mpsz) +\n  tm_polygons(\"green\", title = \"Singapore Boundary\", alpha = 0.5) +\n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  tm_layout(main.title = \"Map of HDB Blocks in Singapore\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_shape(hdb_sf) +\n  tm_dots(col = \"red\", size = 0.001, title = \"HDB Blocks\") +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\n\n\nThis variable will contain the number of HDB blocks in a zone. We will use the same methods to count the number locations in the zone, by using lengths() and st_intersects().\nWe will use this as attractiveness variable, and will include all HDB block types (commercial, hawker, residential) as all of them are attractive destinations for eating out, meeting family/friends, and errands.\n\nst_crs(hdb_vars)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(hdb_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nhdb_sf &lt;- st_transform(hdb_sf, st_crs(hdb_vars))\nhdb_vars &lt;- st_transform(hdb_vars, st_crs(hdb_sf))\nhdb_vars$HDB_COUNT &lt;- lengths(st_intersects(hdb_vars, hdb_sf))\n\n\nhdb_vars$HDB_COUNT &lt;- lengths(st_intersects(hdb_vars, hdb_sf))\n\n\nattractiveness &lt;- left_join(attractiveness,\n                            st_drop_geometry(hdb_vars))\n\nJoining with `by = join_by(HEX_ID)`\n\n# Using head() to limit the number of rows\nkable(head(attractiveness))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHEX_ID\nBUS_STOP_COUNT\nENTERTN_COUNT\nF_AND_B_COUNT\nLEISURE_COUNT\nRETAIL_COUNT\nTRAIN_EXITS_COUNT\nHDB_COUNT\ngeometry\n\n\n\n\nH0001\n1\n0\n0\n0\n0\n0\n0\nPOLYGON ((3970.122 27348.13…\n\n\nH0002\n1\n0\n0\n0\n0\n0\n0\nPOLYGON ((4345.122 27997.65…\n\n\nH0003\n2\n0\n0\n0\n0\n0\n0\nPOLYGON ((4345.122 30595.72…\n\n\nH0004\n1\n0\n0\n0\n0\n0\n0\nPOLYGON ((4720.122 28647.16…\n\n\nH0005\n4\n0\n0\n0\n5\n0\n0\nPOLYGON ((4720.122 29946.2,…\n\n\nH0006\n1\n0\n0\n0\n0\n0\n0\nPOLYGON ((4720.122 31245.24…\n\n\n\n\n\n\n\n\nhdb_filtered_sf &lt;- hdb_sf %&gt;%\n  filter(residential == \"Y\") %&gt;%\n  select(total_dwelling_units)\n\n\n\n\nWhile HDB_COUNT can be a population proxy, we need to consider that HDB blocks have different sizes. For example, taller and wider blocks may have more units compared to shorter blocks, and therefore higher population.\n\nhdb_vars &lt;- hdb_vars %&gt;%\n  left_join(\n    st_intersection(hdb_filtered_sf, hdb_vars) %&gt;%\n      st_drop_geometry() %&gt;%\n      group_by(HEX_ID) %&gt;%\n      summarise(HDB_RESIDENT_COUNT = sum(total_dwelling_units))\n  )\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\nJoining with `by = join_by(HEX_ID)`\n\nkable(hdb_vars[160:165,])\n\n\n\n\n\n\n\n\n\n\n\n\nHEX_ID\nHDB_COUNT\nHDB_RESIDENT_COUNT\ngeometry\n\n\n\n\n160\nH0160\n0\nNA\nPOLYGON ((17095.12 31894.76…\n\n\n161\nH0161\n12\n952\nPOLYGON ((17095.12 33193.8,…\n\n\n162\nH0162\n0\nNA\nPOLYGON ((17095.12 34492.84…\n\n\n163\nH0163\n29\n3114\nPOLYGON ((17095.12 35791.87…\n\n\n164\nH0164\n13\n1136\nPOLYGON ((17095.12 37090.91…\n\n\n165\nH0165\n44\n3652\nPOLYGON ((17095.12 39688.99…\n\n\n\n\n\n\nwrite_rds(hdb_vars, \"Take-home Exercise 2/data/rds/hdb_vars.rds\")\nwrite_rds(attractiveness, \"Take-home Exercise 2/data/rds/attractiveness.rds\")\n\n\nrm(hdb_csv)\nrm(hdb_sf)\nrm(hdb_filtered_sf)"
  },
  {
    "objectID": "Take-home-Ex2.html#propulsiveness-variables",
    "href": "Take-home-Ex2.html#propulsiveness-variables",
    "title": "Take home Ex2",
    "section": "",
    "text": "honeycomb &lt;- read_rds(\"Take-home Exercise 2/data/rds/honeycomb.rds\")\nhdb_vars &lt;- read_rds(\"Take-home Exercise 2/data/rds/hdb_vars.rds\")\ndest_bus_hex &lt;- read_rds(\"Take-home Exercise 2/data/rds/dest_bus_hex202310.rds\")\n\n\npropulsiveness &lt;- honeycomb\n\nHDB:\n\npropulsiveness &lt;- propulsiveness %&gt;%\n  left_join(st_drop_geometry(hdb_vars)) %&gt;%\n  select(HEX_ID, HDB_RESIDENT_COUNT)\n\nJoining with `by = join_by(HEX_ID)`\n\n\nBUS:\n\npropulsiveness &lt;- propulsiveness %&gt;%\n  left_join(st_drop_geometry(dest_bus_hex)) %&gt;%\n  rename(BUS_ALIGHT_COUNT = TRIPS)\n\nJoining with `by = join_by(HEX_ID)`\n\n\n\npropulsiveness[is.na(propulsiveness)] &lt;- 0\nkable(head(propulsiveness))\n\n\n\n\n\n\n\n\n\n\nHEX_ID\nHDB_RESIDENT_COUNT\nBUS_ALIGHT_COUNT\ngeometry\n\n\n\n\nH0001\n0\n0\nPOLYGON ((3970.122 27348.13…\n\n\nH0002\n0\n20\nPOLYGON ((4345.122 27997.65…\n\n\nH0003\n0\n121\nPOLYGON ((4345.122 30595.72…\n\n\nH0004\n0\n4\nPOLYGON ((4720.122 28647.16…\n\n\nH0005\n0\n152\nPOLYGON ((4720.122 29946.2,…\n\n\nH0006\n0\n204\nPOLYGON ((4720.122 31245.24…\n\n\n\n\n\nSave point:\n\nwrite_rds(propulsiveness, \"Take-home Exercise 2/data/rds/propulsiveness202310.rds\")\n\n\nrm(dest_bus_hex)\nrm(hdb_vars)"
  },
  {
    "objectID": "Take-home-Ex2.html#generating-distance-table",
    "href": "Take-home-Ex2.html#generating-distance-table",
    "title": "Take home Ex2",
    "section": "",
    "text": "honeycomb &lt;- read_rds(\"Take-home Exercise 2/data/rds/honeycomb.rds\")\n\nNow that we have the attractive and propulsive forces, we can finally prepare the data for the distance decay component of the model.\n\n\nWe will use spDists() to generate the matrix from our honeycomb, which requires a Spatial data frame. We also need to name the columns and rows to the corresponding HEX_ID of the hexagons.\n\ndist_mat &lt;- spDists(as(honeycomb, \"Spatial\"),\n                    longlat = FALSE)\ncolnames(dist_mat) &lt;- paste0(honeycomb$HEX_ID)\nrownames(dist_mat) &lt;- paste0(honeycomb$HEX_ID)\nkable(head(dist_mat, n=c(8, 8)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nH0001\nH0002\nH0003\nH0004\nH0005\nH0006\nH0007\nH0008\n\n\n\n\nH0001\n0.000\n750.000\n3269.174\n1500.000\n2704.163\n3968.627\n1299.038\n2250.000\n\n\nH0002\n750.000\n0.000\n2598.076\n750.000\n1984.313\n3269.174\n750.000\n1500.000\n\n\nH0003\n3269.174\n2598.076\n0.000\n1984.313\n750.000\n750.000\n2704.163\n1500.000\n\n\nH0004\n1500.000\n750.000\n1984.313\n0.000\n1299.038\n2598.076\n750.000\n750.000\n\n\nH0005\n2704.163\n1984.313\n750.000\n1299.038\n0.000\n1299.038\n1984.313\n750.000\n\n\nH0006\n3968.627\n3269.174\n750.000\n2598.076\n1299.038\n0.000\n3269.174\n1984.313\n\n\nH0007\n1299.038\n750.000\n2704.163\n750.000\n1984.313\n3269.174\n0.000\n1299.038\n\n\nH0008\n2250.000\n1500.000\n1500.000\n750.000\n750.000\n1984.313\n1299.038\n0.000\n\n\n\n\n\n\n\n\nTo generate data with the specifications we defined in Data Outputs, we must generate a pivot table from our distance matrix, dist_mat.\nWe will use melt(), for this purpose and rename the columns to names we defined in our modelling data shape.\n\ndist_tbl &lt;- melt(dist_mat) %&gt;%\n  rename(DISTANCE = value) %&gt;%\n  rename(ORIG_HEX_ID = Var1) %&gt;%\n  rename(DEST_HEX_ID = Var2)\nkable(head(dist_tbl))\n\n\n\n\nORIG_HEX_ID\nDEST_HEX_ID\nDISTANCE\n\n\n\n\nH0001\nH0001\n0.000\n\n\nH0002\nH0001\n750.000\n\n\nH0003\nH0001\n3269.174\n\n\nH0004\nH0001\n1500.000\n\n\nH0005\nH0001\n2704.163\n\n\nH0006\nH0001\n3968.627\n\n\n\n\n\n\n\n\n\ndist_tbl$DISTANCE[dist_tbl$ORIG_HEX_ID == dist_tbl$DEST_HEX_ID] &lt;- 200\nsummary(dist_tbl$DISTANCE)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    200    8250   13332   14145   18929   44680 \n\n\n\nwrite_rds(dist_tbl, \"Take-home Exercise 2/data/rds/dist_tbl.rds\")\n\n\nrm(dist_mat)"
  },
  {
    "objectID": "Take-home-Ex2.html#four-sim",
    "href": "Take-home-Ex2.html#four-sim",
    "title": "Take home Ex2",
    "section": "",
    "text": "10.1 Generate SIM_data\n\nhoneycomb &lt;- read_rds(\"Take-home Exercise 2/data/rds/honeycomb.rds\")\nflowlines &lt;- read_rds(\"Take-home Exercise 2/data/rds/flowlines202310.rds\")\ndist_tbl &lt;- read_rds(\"Take-home Exercise 2/data/rds/dist_tbl.rds\")\nattractiveness &lt;- read_rds(\"Take-home Exercise 2/data/rds/attractiveness.rds\")\npropulsiveness &lt;- read_rds(\"Take-home Exercise 2/data/rds/propulsiveness202310.rds\")\n\nNow that we have all the components, we will now generate the geospatial data that contains the following columns:\n\nORIG_HEX_ID: ID corresponding to the origin zone\nDEST_HEX_ID: ID corresponding to the destination zone\nDISTANCE: Distance between the (centroids of) origin and destination zones\nTRIPS: Number of bus trips between the origin and destination zones\nDEST_*_COUNT: Values from [Attractiveness Variables Table (attractiveness)]\nORIG_*_COUNT: Values from [Propulsiveness Variables Table (propulsiveness)]\nGeometry containing the flowlines\n\nWe will join the tables to generate this data.\nFlowlines:\n\nkable(head(flowlines))\n\n\n\n\nORIG_HEX_ID\nDEST_HEX_ID\nTRIPS\ngeometry\n\n\n\n\nH0002\nH0016\n1\nLINESTRING (4345.122 28430….\n\n\nH0002\nH0017\n2\nLINESTRING (4345.122 28430….\n\n\nH0002\nH0032\n16\nLINESTRING (4345.122 28430….\n\n\nH0003\nH0005\n1\nLINESTRING (4345.122 31028….\n\n\nH0003\nH0022\n56\nLINESTRING (4345.122 31028….\n\n\nH0003\nH0028\n10\nLINESTRING (4345.122 31028….\n\n\n\n\n\n\nSIM_data &lt;- flowlines\n\nDistance:\n\nSIM_data &lt;- SIM_data %&gt;% left_join(dist_tbl)\n\nJoining with `by = join_by(ORIG_HEX_ID, DEST_HEX_ID)`\n\n\nPropulsive:\n\nSIM_data &lt;- left_join(\n  SIM_data,\n  propulsiveness %&gt;%\n    st_drop_geometry() %&gt;%\n    rename_with(~paste(\"ORIG_\", .x, sep = \"\"))\n  )\n\nJoining with `by = join_by(ORIG_HEX_ID)`\n\n\nAttractive:\n\nSIM_data &lt;- left_join(\n  SIM_data,\n  attractiveness %&gt;%\n    st_drop_geometry() %&gt;%\n    rename_with(~paste(\"DEST_\", .x, sep = \"\"))\n  )\n\nJoining with `by = join_by(DEST_HEX_ID)`\n\n\nWe can now clear the data that we have used for “SIM_data” from the environment.\n\nrm(attractiveness)\nrm(propulsiveness)\nrm(dist_tbl)\nrm(flowlines)\n\n\n\n\nsummary(SIM_data)\n\n  ORIG_HEX_ID     DEST_HEX_ID        TRIPS             DISTANCE    \n H0518  :  307   H0518  :  314   Min.   :    1.00   Min.   :  200  \n H0728  :  291   H0540  :  300   1st Qu.:    3.00   1st Qu.: 2704  \n H0521  :  285   H0530  :  297   Median :   12.00   Median : 5250  \n H0530  :  282   H0728  :  297   Mean   :   96.74   Mean   : 6117  \n H0491  :  278   H0521  :  290   3rd Qu.:   48.00   3rd Qu.: 8518  \n H0651  :  268   H0450  :  280   Max.   :33266.00   Max.   :24784  \n (Other):58135   (Other):58068                                     \n ORIG_HDB_RESIDENT_COUNT ORIG_BUS_ALIGHT_COUNT DEST_BUS_STOP_COUNT\n Min.   :   0            Min.   :     0        Min.   : 1.00      \n 1st Qu.:   0            1st Qu.:  3459        1st Qu.: 5.00      \n Median : 932            Median :  8693        Median : 8.00      \n Mean   :1850            Mean   : 14148        Mean   : 7.96      \n 3rd Qu.:3351            3rd Qu.: 16757        3rd Qu.:10.00      \n Max.   :7946            Max.   :108111        Max.   :19.00      \n                                                                  \n DEST_ENTERTN_COUNT DEST_F_AND_B_COUNT DEST_LEISURE_COUNT DEST_RETAIL_COUNT\n Min.   :0.0000     Min.   :  0.000    Min.   : 0.000     Min.   :   0.00  \n 1st Qu.:0.0000     1st Qu.:  0.000    1st Qu.: 0.000     1st Qu.:   7.00  \n Median :0.0000     Median :  0.000    Median : 1.000     Median :  31.00  \n Mean   :0.3442     Mean   :  5.696    Mean   : 2.336     Mean   :  98.31  \n 3rd Qu.:0.0000     3rd Qu.:  2.000    3rd Qu.: 3.000     3rd Qu.: 110.00  \n Max.   :9.0000     Max.   :133.000    Max.   :41.000     Max.   :1678.00  \n                                                                           \n DEST_TRAIN_EXITS_COUNT DEST_HDB_COUNT            geometry    \n Min.   : 0.000         Min.   :  0.00   LINESTRING   :59846  \n 1st Qu.: 0.000         1st Qu.:  0.00   epsg:NA      :    0  \n Median : 0.000         Median : 12.00   +proj=tmer...:    0  \n Mean   : 1.375         Mean   : 20.81                        \n 3rd Qu.: 2.000         3rd Qu.: 36.00                        \n Max.   :13.000         Max.   :103.00                        \n                                                              \n\n\nNow we will make finishing touches on SIM_data , so that they are compatible with modeling. We need to remove the 0’s as we will apply log function to them, which will result to undefined.\nSet them to 0.99.\n\nreplace_zeroes &lt;- function(data, col_name) {\n  data[[col_name]][data[[col_name]] == 0] &lt;- 0.99\n  data\n}\n\n\nsummary(SIM_data)\n\n  ORIG_HEX_ID     DEST_HEX_ID        TRIPS             DISTANCE    \n H0518  :  307   H0518  :  314   Min.   :    1.00   Min.   :  200  \n H0728  :  291   H0540  :  300   1st Qu.:    3.00   1st Qu.: 2704  \n H0521  :  285   H0530  :  297   Median :   12.00   Median : 5250  \n H0530  :  282   H0728  :  297   Mean   :   96.74   Mean   : 6117  \n H0491  :  278   H0521  :  290   3rd Qu.:   48.00   3rd Qu.: 8518  \n H0651  :  268   H0450  :  280   Max.   :33266.00   Max.   :24784  \n (Other):58135   (Other):58068                                     \n ORIG_HDB_RESIDENT_COUNT ORIG_BUS_ALIGHT_COUNT DEST_BUS_STOP_COUNT\n Min.   :   0            Min.   :     0        Min.   : 1.00      \n 1st Qu.:   0            1st Qu.:  3459        1st Qu.: 5.00      \n Median : 932            Median :  8693        Median : 8.00      \n Mean   :1850            Mean   : 14148        Mean   : 7.96      \n 3rd Qu.:3351            3rd Qu.: 16757        3rd Qu.:10.00      \n Max.   :7946            Max.   :108111        Max.   :19.00      \n                                                                  \n DEST_ENTERTN_COUNT DEST_F_AND_B_COUNT DEST_LEISURE_COUNT DEST_RETAIL_COUNT\n Min.   :0.0000     Min.   :  0.000    Min.   : 0.000     Min.   :   0.00  \n 1st Qu.:0.0000     1st Qu.:  0.000    1st Qu.: 0.000     1st Qu.:   7.00  \n Median :0.0000     Median :  0.000    Median : 1.000     Median :  31.00  \n Mean   :0.3442     Mean   :  5.696    Mean   : 2.336     Mean   :  98.31  \n 3rd Qu.:0.0000     3rd Qu.:  2.000    3rd Qu.: 3.000     3rd Qu.: 110.00  \n Max.   :9.0000     Max.   :133.000    Max.   :41.000     Max.   :1678.00  \n                                                                           \n DEST_TRAIN_EXITS_COUNT DEST_HDB_COUNT            geometry    \n Min.   : 0.000         Min.   :  0.00   LINESTRING   :59846  \n 1st Qu.: 0.000         1st Qu.:  0.00   epsg:NA      :    0  \n Median : 0.000         Median : 12.00   +proj=tmer...:    0  \n Mean   : 1.375         Mean   : 20.81                        \n 3rd Qu.: 2.000         3rd Qu.: 36.00                        \n Max.   :13.000         Max.   :103.00                        \n                                                              \n\n\nSave point:\n\nwrite_rds(SIM_data, \"Take-home Exercise 2/data/rds/SIM_data202310.rds\")\n\n\nrm(SIM_data)\nrm(replace_zeroes)"
  },
  {
    "objectID": "Take-home-Ex2.html#visualize-spatial-interactions",
    "href": "Take-home-Ex2.html#visualize-spatial-interactions",
    "title": "Take home Ex2",
    "section": "",
    "text": "mpsz &lt;- read_rds(\"Take-home Exercise 2/data/rds/mpsz.rds\")\nhoneycomb &lt;- read_rds(\"Take-home Exercise 2/data/rds/honeycomb.rds\")\nflowlines &lt;- read_rds(\"Take-home Exercise 2/data/rds/flowlines202310.rds\")\nSIM_data &lt;- read_rds(\"Take-home Exercise 2/data/rds/SIM_data202310.rds\")\npropulsiveness &lt;- read_rds(\"Take-home Exercise 2/data/rds/propulsiveness202310.rds\")\nattractiveness &lt;- read_rds(\"Take-home Exercise 2/data/rds/attractiveness.rds\")\n\n\n\n\nflowlines_no_intra &lt;- flowlines %&gt;%\n  filter(ORIG_HEX_ID != DEST_HEX_ID)\n\n\nquantile(flowlines_no_intra$TRIPS,\n         probs = c(0.8,0.9,0.95,0.99,1))\n\n     80%      90%      95%      99%     100% \n   67.00   171.00   377.00  1519.14 33266.00 \n\n\nLet’s take a look at the map.\n\ninvalid_geoms &lt;- which(!st_is_valid(mpsz))\n\n# If there are invalid geometries, fix them\nif(length(invalid_geoms) &gt; 0) {\n  mpsz[invalid_geoms, ] &lt;- st_make_valid(mpsz[invalid_geoms, ])\n}\n\n\ntm_shape(mpsz) +\n  tm_polygons(\"grey\", title = \"Singapore Boundary\", alpha = 0.5) +\n  \n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  \n  tm_shape(flowlines_no_intra %&gt;% filter(TRIPS &gt; 376)) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"red\",\n           scale = c(0.1, 1, 3, 5, 7),\n           title.lwd = \"# of bus trips\",\n           alpha = 0.8) +\n  \n  tm_layout(main.title = \"Top 5% Bus Passenger flow for Weekends/Holidays 11 AM - 2PM (October 2023)\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_grid(alpha = 0.2)\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\nInsights\nIt is notable that the thickest flow lines are for relatively short distances, like the bus rides to and from Woodlands Checkpoint to Kranji Station. We can notice these thick lines on busy zones where lines converge as well.\nAlthough not as thick, we can notice longer long lines on the map. This can indicate people more willing to travel longer distances over the weekend for recreation and meeting family and friends. This also means that a location being close by is not the only motivator for people to visit a place. Spatial interaction model can reveal more patterns to this."
  },
  {
    "objectID": "Take-home-Ex2.html#plot-chart-trips-distance",
    "href": "Take-home-Ex2.html#plot-chart-trips-distance",
    "title": "Take home Ex2",
    "section": "",
    "text": "ggplot(SIM_data,\n       aes(x = DISTANCE, y = TRIPS)) +\n  geom_point() +\n  geom_hline(yintercept = 376.25, color = \"red\", linetype = \"dashed\") +\n  annotate(\"text\", x = 20000,\n           y = 600, label = \"95th percentile\",\n           hjust = -0.1, color = \"red\", size = 3) +\n  geom_hline(yintercept = 1510, color = \"blue\", linetype = \"dashed\") +\n  annotate(\"text\", x = 20000,\n           y = 1800, label = \"99th percentile\",\n           hjust = -0.1, color = \"blue\", size = 3) +\n  labs(title = \"Number of Trips as a Function of Distance\",\n       x = \"Distance (m)\",\n       y = \"Number of Trips\")\n\n\n\n\nPlotting it in a log scale shows a more linear relationship.\n\nggplot(SIM_data,\n       aes(x = log(DISTANCE), y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nInsights\nThe maximum number of trips exponentially decrease as the distance increases, which means that generally, the farther the distance, the less trips there are.\nHowever, some outliers can be observed like some zone pairs with almost 20km distance between them having close to 99th percentile of TRIP values. In these zone pairs, there could be strong propulsive or attractive forces attracting passengers to ride the bus between those zones."
  },
  {
    "objectID": "Take-home-Ex2.html#visualize-propulsive-forces",
    "href": "Take-home-Ex2.html#visualize-propulsive-forces",
    "title": "Take home Ex2",
    "section": "",
    "text": "plot_propulsive &lt;- function(var_name, title_comp) {\n  tm_shape(mpsz) +\n  tm_polygons(\"gray\", title = \"Singapore Boundary\") +\n  \n  # Adding this layer underneath propulsiveness as we removed 0s. from the map\n  # so it won't skew the legend\n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\") +\n  \n  tm_shape(propulsiveness %&gt;% filter(if_any(var_name, ~. &gt;= 1))) +\n  tm_polygons(var_name, palette = \"Blues\", style = \"quantile\") +\n    \n  tm_shape(flowlines_no_intra %&gt;% filter(TRIPS &gt; 376)) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"orange\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           title.lwd = \"# of bus trips\",\n           n = 6,\n           alpha = 0.5) +\n  \n  tm_layout(main.title = paste(\"Top 5% Bus Passenger Flows and\", title_comp),\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.7, position = c(\"right\", \"top\")) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\",\n             bg.alpha = 0.5, position = c(\"right\", \"top\")) +\n  tm_grid(alpha = 0.2) +\n  tm_credits(\"*Passenger data from weekend/holidays 11AM - 2PM\\n(October 2023)\",\n             bg.color = \"white\", bg.alpha = 0.7,\n             position = c(\"left\", \"bottom\"))\n}\n\n\n\n\nplot_propulsive(\"HDB_RESIDENT_COUNT\", \"HDB POPULATION\")\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(var_name)\n\n  # Now:\n  data %&gt;% select(all_of(var_name))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_propulsive(\"BUS_ALIGHT_COUNT\", \"Transfer by BUS\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\nInsights\nUpon visual inspection, HDB population and bus alights from zones correspond closely with our flowlines."
  },
  {
    "objectID": "Take-home-Ex2.html#visualize-attractive-forces",
    "href": "Take-home-Ex2.html#visualize-attractive-forces",
    "title": "Take home Ex2",
    "section": "",
    "text": "In this section, we plot attractive forces in their own choropleth maps to see if the top 5% flows correspond to areas we hypothesize have high attractive forces.\n\nplot_attractive &lt;- function(var_name, title_comp) {\n  tm_shape(mpsz) +\n  tm_polygons(\"gray\", title = \"Singapore Boundary\") +\n  \n  # Adding this layer underneath attractiveness as we removed 0s. from the map\n  # so it won't skew the legend\n  tm_shape(honeycomb) +\n  tm_polygons(col = \"white\") +\n  \n  tm_shape(attractiveness %&gt;% filter(if_any(var_name, ~. &gt;= 1))) +\n  tm_polygons(var_name, palette = \"Purples\", style = \"quantile\") +\n    \n  tm_shape(flowlines_no_intra %&gt;% filter(TRIPS &gt; 376)) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"red\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           title.lwd = \"# of bus trips\",\n           n = 6,\n           alpha = 0.5) +\n  \n  tm_layout(main.title = paste(\"Top 5% Bus Passenger Flows and\", title_comp),\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.7, position = c(\"right\", \"top\")) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\",\n             bg.alpha = 0.5, position = c(\"right\", \"top\")) +\n  tm_grid(alpha = 0.2) +\n  tm_credits(\"*Passenger data from weekend/holidays 11AM - 2PM\\n(October 2023)\",\n             bg.color = \"white\", bg.alpha = 0.7,\n             position = c(\"left\", \"bottom\"))\n}\n\n\n\n\nplot_attractive(\"BUS_STOP_COUNT\", \"Number of Busstops\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_attractive(\"HDB_COUNT\", \"Number of HDB\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_attractive(\"ENTERTN_COUNT\", \"Number of Entertainment Items\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_attractive(\"F_AND_B_COUNT\", \"Number of F&B Outlets\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_attractive(\"LEISURE_COUNT\", \"Number of Leisure&Recreation Items\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\n\n\nplot_attractive(\"RETAIL_COUNT\", \"Number of Retail\")\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\nInsights\nThere are less location types than the others, like entertainment and leisure locations.\nThere are also location types that are heavily concentrated in some zones, like the entertainment and F&B, which are heavily concentrated around the Orchard area. Conversely, there are much less HDBs in Orchard area. Even though the flowlines are not thick in this area, there are many flowlines, although thin. This means people are coming from various parts of Singapore.\nSave point\n\nwrite_rds(flowlines_no_intra, \"Take-home Exercise 2/data/rds/flowines_no_intra202310.rds\")\n\n\nrm(flowlines)\nrm(attractiveness)\nrm(propulsiveness)\nrm(plot_attractive)\nrm(plot_propulsive)"
  }
]